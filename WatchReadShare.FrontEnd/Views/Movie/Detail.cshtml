@model WatchReadShare.Application.ServiceResult<MovieDetailViewModel>
@{
    ViewData["Title"] = Model.Data.Name;
}

<div class="movie-detail-section">
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <div class="movie-header">
                    <h1 class="movie-title">@Model.Data.Name</h1>
                    <div class="movie-meta">
                        @if (Model.Data.Year.HasValue)
                        {
                            <span><i class="fas fa-calendar"></i> @Model.Data.Year</span>
                        }
                    </div>
                </div>

                <div class="movie-content">
                    <img src="@(Model.Data.ImageUrl ?? "/images/default-movie.jpg")" alt="@Model.Data.Name" class="movie-poster">
                    <p class="movie-description">@Model.Data.Description</p>
                </div>

                <!-- Yorum bölümü -->
                <div class="comments-section">
                    <h3>Yorumlar (@Model.Data.Comments.Count)</h3>
                    
                    @if (User.Identity.IsAuthenticated)
                    {
                        <partial name="_AddComment" model="new AddCommentViewModel { MovieId = Model.Data.Id }" />
                    }
                    else
                    {
                        <div class="alert alert-info">
                            Yorum yapabilmek için lütfen <a href="/login">giriş yapın</a>.
                        </div>
                    }

                    @foreach (var comment in Model.Data.Comments.OrderByDescending(c => c.Created))
                    {
                        <div class="comment-item">
                            <div class="comment-content">
                                <p>@comment.Content</p>
                            </div>
                            <div class="comment-meta">
                                <span class="date">@comment.Created.ToString("dd.MM.yyyy HH:mm")</span>
                                <div class="actions">
                                    <button class="btn btn-sm @(comment.IsLiked ? "btn-primary" : "btn-outline-primary")"
                                            onclick="likeComment(@comment.Id)">
                                        <i class="fas fa-thumbs-up"></i> @comment.LikeCount
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>@TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@section Scripts {
    <script src="~/js/comment.js"></script>
} 